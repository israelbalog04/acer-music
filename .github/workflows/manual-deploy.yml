name: D√©ploiement Manuel

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environnement de d√©ploiement'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      version:
        description: 'Version √† d√©ployer (optionnel)'
        required: false
        type: string
        default: 'latest'

env:
  NODE_VERSION: '18'

jobs:
  deploy:
    name: D√©ploiement ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Configuration Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Installation des d√©pendances
        run: npm ci

      - name: V√©rifications pr√©-d√©ploiement
        run: |
          echo "üîç V√©rifications pr√©-d√©ploiement..."
          npm run type-check
          npm run build

      - name: Tests de base de donn√©es
        run: |
          echo "üóÑÔ∏è  Tests de base de donn√©es..."
          npm run db:generate
          npm run db:push
          echo "‚úÖ Base de donn√©es configur√©e avec succ√®s"

      - name: D√©ploiement sur Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
        env:
          DATABASE_URL: ${{ github.event.inputs.environment == 'production' && secrets.PRODUCTION_DATABASE_URL || secrets.STAGING_DATABASE_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ github.event.inputs.environment == 'production' && secrets.PRODUCTION_URL || secrets.STAGING_URL }}

      - name: Tests post-d√©ploiement
        run: |
          echo "üß™ Tests post-d√©ploiement..."
          sleep 30
          
          DEPLOY_URL="${{ github.event.inputs.environment == 'production' && secrets.PRODUCTION_URL || secrets.STAGING_URL }}"
          
          # Test de sant√©
          curl -f "$DEPLOY_URL/api/health" || echo "‚ùå Health check failed"
          
          # Test des APIs critiques
          curl -f "$DEPLOY_URL/api/auth/providers" || echo "‚ùå Auth API failed"

      - name: Notification de succ√®s
        if: success()
        run: |
          echo "‚úÖ D√©ploiement ${{ github.event.inputs.environment }} r√©ussi!"
          echo "URL: ${{ github.event.inputs.environment == 'production' && secrets.PRODUCTION_URL || secrets.STAGING_URL }}"
          echo "Version: ${{ github.event.inputs.version }}"
          echo "D√©ploy√© par: ${{ github.actor }}"

      - name: Notification d'√©chec
        if: failure()
        run: |
          echo "‚ùå D√©ploiement ${{ github.event.inputs.environment }} √©chou√©!"
          echo "D√©ploy√© par: ${{ github.actor }}"
          echo "Commit: ${{ github.sha }}"

  # Job de notification Slack
  notify:
    name: Notification Slack
    runs-on: ubuntu-latest
    needs: deploy
    if: always()

    steps:
      - name: Notification Slack (Succ√®s)
        if: needs.deploy.result == 'success'
        uses: 8398a7/action-slack@v3
        with:
          status: success
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          text: |
            üöÄ D√©ploiement ${{ github.event.inputs.environment }} r√©ussi!
            Environnement: ${{ github.event.inputs.environment }}
            Version: ${{ github.event.inputs.version }}
            D√©ploy√© par: ${{ github.actor }}

      - name: Notification Slack (√âchec)
        if: needs.deploy.result == 'failure'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          text: |
            ‚ùå D√©ploiement ${{ github.event.inputs.environment }} √©chou√©!
            Environnement: ${{ github.event.inputs.environment }}
            D√©ploy√© par: ${{ github.actor }}
            Commit: ${{ github.sha }}
