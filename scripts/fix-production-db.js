#!/usr/bin/env node

const { PrismaClient } = require('@prisma/client');

async function testDatabaseConnection() {
  console.log('üîç Test de connexion √† la base de donn√©es PostgreSQL...');
  
  // Afficher les variables d'environnement (sans les mots de passe)
  const dbUrl = process.env.DATABASE_URL;
  const directUrl = process.env.DIRECT_URL;
  
  console.log('\nüìã Configuration actuelle:');
  console.log(`DATABASE_URL: ${dbUrl ? '‚úÖ Configur√©e' : '‚ùå Non configur√©e'}`);
  console.log(`DIRECT_URL: ${directUrl ? '‚úÖ Configur√©e' : '‚ùå Non configur√©e'}`);
  
  if (dbUrl) {
    // Masquer le mot de passe dans l'URL pour l'affichage
    const maskedUrl = dbUrl.replace(/:([^:@]+)@/, ':****@');
    console.log(`URL masqu√©e: ${maskedUrl}`);
  }
  
  try {
    console.log('\nüîå Tentative de connexion...');
    const prisma = new PrismaClient({
      datasources: {
        db: {
          url: dbUrl
        }
      }
    });
    
    // Test de connexion simple
    await prisma.$connect();
    console.log('‚úÖ Connexion r√©ussie !');
    
    // Test d'une requ√™te simple
    const result = await prisma.$queryRaw`SELECT 1 as test`;
    console.log('‚úÖ Requ√™te de test r√©ussie:', result);
    
    // V√©rifier les tables existantes
    const tables = await prisma.$queryRaw`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public'
      ORDER BY table_name
    `;
    console.log('üìä Tables existantes:', tables.length);
    tables.forEach(table => {
      console.log(`  - ${table.table_name}`);
    });
    
    await prisma.$disconnect();
    console.log('\nüéâ Tous les tests de connexion sont pass√©s !');
    
  } catch (error) {
    console.error('\n‚ùå Erreur de connexion:', error.message);
    console.error('Code d\'erreur:', error.code);
    
    // Suggestions de r√©solution
    console.log('\nüîß Suggestions de r√©solution:');
    
    if (error.code === 'P1001') {
      console.log('1. V√©rifiez que l\'URL de connexion est correcte');
      console.log('2. V√©rifiez que la base de donn√©es PostgreSQL est accessible');
      console.log('3. V√©rifiez les param√®tres de s√©curit√© (firewall, IP whitelist)');
    }
    
    if (error.code === 'P1017') {
      console.log('1. V√©rifiez les identifiants de connexion');
      console.log('2. V√©rifiez que l\'utilisateur a les permissions n√©cessaires');
    }
    
    if (error.code === 'P1018') {
      console.log('1. V√©rifiez que la base de donn√©es existe');
      console.log('2. V√©rifiez que l\'utilisateur a acc√®s √† cette base');
    }
    
    console.log('\nüìù Configuration recommand√©e pour Supabase:');
    console.log('DATABASE_URL="postgresql://postgres:[PASSWORD]@db.butlptmveyaluxlnwizr.supabase.co:5432/postgres"');
    console.log('DIRECT_URL="postgresql://postgres:[PASSWORD]@db.butlptmveyaluxlnwizr.supabase.co:5432/postgres"');
    
    process.exit(1);
  }
}

// Ex√©cuter le test
testDatabaseConnection();
