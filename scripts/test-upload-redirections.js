const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

// Fonction pour afficher les informations sur les redirections
function displayRedirectInfo() {
  console.log('üé§ Test des redirections vers la page d\'upload');
  console.log('=' .repeat(60));
  
  console.log('‚úÖ Modifications effectu√©es:');
  console.log('   ‚Ä¢ Bouton "Enregistrer" principal ‚Üí /app/music/upload');
  console.log('   ‚Ä¢ Boutons "Enregistrer" par chanson ‚Üí /app/music/upload?songId=X&songTitle=Y');
  console.log('   ‚Ä¢ Page d\'upload modifi√©e pour recevoir les param√®tres');
  console.log('');
  
  console.log('üéØ Comportement attendu:');
  console.log('   ‚Ä¢ Clic sur "Enregistrer" ‚Üí Redirection vers page d\'upload');
  console.log('   ‚Ä¢ Clic sur "Enregistrer" d\'une chanson ‚Üí Redirection avec chanson pr√©s√©lectionn√©e');
  console.log('   ‚Ä¢ Page d\'upload ‚Üí √âtape "details" si chanson pr√©s√©lectionn√©e');
  console.log('');
}

// Fonction pour tester les URLs de redirection
function testRedirectUrls() {
  console.log('üîó Test des URLs de redirection:');
  console.log('=' .repeat(60));
  
  const testCases = [
    {
      name: 'Enregistrement g√©n√©ral',
      url: '/app/music/upload',
      description: 'Page d\'upload sans chanson pr√©s√©lectionn√©e'
    },
    {
      name: 'Enregistrement Amazing Grace',
      url: '/app/music/upload?songId=1&songTitle=Amazing%20Grace',
      description: 'Page d\'upload avec Amazing Grace pr√©s√©lectionn√©e'
    },
    {
      name: 'Enregistrement How Great Thou Art',
      url: '/app/music/upload?songId=2&songTitle=How%20Great%20Thou%20Art',
      description: 'Page d\'upload avec How Great Thou Art pr√©s√©lectionn√©e'
    }
  ];
  
  testCases.forEach((testCase, index) => {
    console.log(`${index + 1}. ${testCase.name}`);
    console.log(`   URL: ${testCase.url}`);
    console.log(`   Description: ${testCase.description}`);
    console.log('');
  });
}

// Fonction pour afficher les chansons disponibles
async function displayAvailableSongs() {
  try {
    console.log('üìã Chansons disponibles pour enregistrement:');
    console.log('=' .repeat(60));
    
    const churches = await prisma.church.findMany();
    if (churches.length === 0) {
      console.log('‚ùå Aucune √©glise trouv√©e.');
      return;
    }

    const church = churches[0];
    
    const songs = await prisma.song.findMany({
      where: {
        churchId: church.id
      },
      orderBy: {
        title: 'asc'
      },
      select: {
        id: true,
        title: true,
        artist: true,
        youtubeUrl: true,
        _count: {
          select: {
            recordings: true
          }
        }
      }
    });
    
    if (songs.length === 0) {
      console.log('‚ÑπÔ∏è  Aucune chanson trouv√©e.');
      return;
    }
    
    songs.forEach((song, index) => {
      const hasYouTube = song.youtubeUrl ? '‚úÖ' : '‚ùå';
      const recordingsCount = song._count.recordings;
      
      console.log(`${index + 1}. ${song.title}`);
      console.log(`   ID: ${song.id}`);
      console.log(`   Artiste: ${song.artist || 'Artiste inconnu'}`);
      console.log(`   YouTube: ${hasYouTube}`);
      console.log(`   Enregistrements existants: ${recordingsCount}`);
      console.log(`   URL de redirection: /app/music/upload?songId=${song.id}&songTitle=${encodeURIComponent(song.title)}`);
      console.log('');
    });
    
  } catch (error) {
    console.error('‚ùå Erreur:', error);
  }
}

// Fonction pour simuler les redirections
function simulateRedirects() {
  console.log('üîÑ Simulation des redirections:');
  console.log('=' .repeat(60));
  
  console.log('üì± Bouton "Enregistrer" principal:');
  console.log('   ‚Ä¢ Localisation: Header de la page r√©pertoire');
  console.log('   ‚Ä¢ Action: window.location.href = "/app/music/upload"');
  console.log('   ‚Ä¢ R√©sultat: Redirection vers page d\'upload g√©n√©rale');
  console.log('');
  
  console.log('üéµ Boutons "Enregistrer" par chanson:');
  console.log('   ‚Ä¢ Localisation: Cartes de chansons individuelles');
  console.log('   ‚Ä¢ Action: Redirection avec param√®tres songId et songTitle');
  console.log('   ‚Ä¢ R√©sultat: Page d\'upload avec chanson pr√©s√©lectionn√©e');
  console.log('');
  
  console.log('‚öôÔ∏è  Page d\'upload modifi√©e:');
  console.log('   ‚Ä¢ D√©tection des param√®tres URL');
  console.log('   ‚Ä¢ Pr√©s√©lection automatique de la chanson');
  console.log('   ‚Ä¢ Passage direct √† l\'√©tape "details"');
  console.log('');
}

// Fonction pour tester la compatibilit√©
function testCompatibility() {
  console.log('üîß Test de compatibilit√©:');
  console.log('=' .repeat(60));
  
  console.log('‚úÖ Compatibilit√© avec l\'existant:');
  console.log('   ‚Ä¢ Page d\'upload existante conserv√©e');
  console.log('   ‚Ä¢ Fonctionnalit√©s d\'upload maintenues');
  console.log('   ‚Ä¢ Interface utilisateur pr√©serv√©e');
  console.log('   ‚Ä¢ Param√®tres optionnels (r√©trocompatibilit√©)');
  console.log('');
  
  console.log('üéØ Am√©liorations apport√©es:');
  console.log('   ‚Ä¢ Navigation plus intuitive');
  console.log('   ‚Ä¢ Pr√©s√©lection de chanson');
  console.log('   ‚Ä¢ R√©duction des clics utilisateur');
  console.log('   ‚Ä¢ Exp√©rience utilisateur am√©lior√©e');
  console.log('');
}

// Fonction principale
async function runRedirectTests() {
  console.log('üé§ Tests des redirections vers la page d\'upload\n');
  
  // Informations sur les redirections
  displayRedirectInfo();
  
  // Test des URLs
  testRedirectUrls();
  
  // Chansons disponibles
  await displayAvailableSongs();
  
  // Simulation des redirections
  simulateRedirects();
  
  // Test de compatibilit√©
  testCompatibility();
  
  console.log('‚úÖ Tests termin√©s !');
  console.log('\nüìã Instructions pour tester:');
  console.log('1. Lancez l\'application: npm run dev');
  console.log('2. Allez dans Musique > R√©pertoire');
  console.log('3. Testez le bouton "Enregistrer" principal');
  console.log('4. Testez les boutons "Enregistrer" des chansons individuelles');
  console.log('5. V√©rifiez que la page d\'upload re√ßoit les param√®tres');
  console.log('6. Confirmez la pr√©s√©lection des chansons');
  console.log('');
  console.log('üéØ R√©sultats attendus:');
  console.log('   ‚Ä¢ Redirection vers /app/music/upload');
  console.log('   ‚Ä¢ Param√®tres songId et songTitle dans l\'URL');
  console.log('   ‚Ä¢ Chanson pr√©s√©lectionn√©e dans l\'interface');
  console.log('   ‚Ä¢ √âtape "details" automatiquement active');
  
  await prisma.$disconnect();
}

// Ex√©cuter les tests
runRedirectTests().catch(console.error);
